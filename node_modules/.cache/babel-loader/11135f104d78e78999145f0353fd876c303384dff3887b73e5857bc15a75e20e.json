{"ast":null,"code":"var _jsxFileName = \"/Users/shivamsharma/Desktop/CalendarAssignment/src/components/SmallCalendar.js\",\n  _s = $RefreshSig$();\nimport dayjs from \"dayjs\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport GlobalContext from \"../context/GlobalContext\";\nimport { getMonth } from \"../util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SmallCalendar() {\n  _s();\n  const [currentMonthIdx, setCurrentMonthIdx] = useState(dayjs().month());\n  const [currentMonth, setCurrentMonth] = useState(getMonth());\n  useEffect(() => {\n    setCurrentMonth(getMonth(currentMonthIdx));\n  }, [currentMonthIdx]);\n  const {\n    monthIndex,\n    setSmallCalendarMonth,\n    setDaySelected,\n    daySelected\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    setCurrentMonthIdx(monthIndex);\n  }, [monthIndex]);\n  function handlePrevMonth() {\n    setCurrentMonthIdx(currentMonthIdx - 1);\n  }\n  function handleNextMonth() {\n    setCurrentMonthIdx(currentMonthIdx + 1);\n  }\n  function getDayClass(day) {\n    const format = \"DD-MM-YY\";\n    const nowDay = dayjs().format(format);\n    const currDay = day.format(format);\n    const slcDay = daySelected && daySelected.format(format);\n    if (nowDay === currDay) {\n      return \"bg-blue-500 rounded-full text-white\";\n    } else if (currDay === slcDay) {\n      return \"bg-blue-100 rounded-full text-blue-600 font-bold\";\n    } else {\n      return \"\";\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-9\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 font-bold\",\n        children: dayjs(new Date(dayjs().year(), currentMonthIdx)).format(\"MMMM YYYY\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevMonth,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons-outlined cursor-pointer text-gray-600 mx-2\",\n            children: \"chevron_left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextMonth,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons-outlined cursor-pointer text-gray-600 mx-2\",\n            children: \"chevron_right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 grid-rows-6\",\n      children: [currentMonth[0].map((day, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm py-1 text-center\",\n        children: day.format(\"dd\").charAt(0)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)), currentMonth.map((row, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: row.map((day, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setSmallCalendarMonth(currentMonthIdx);\n            setDaySelected(day);\n          },\n          className: `py-1 w-full ${getDayClass(day)}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: day.format(\"D\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(SmallCalendar, \"c0Dc5TY+bucUMzyRqhJGRUKr6Yc=\");\n_c = SmallCalendar;\nvar _c;\n$RefreshReg$(_c, \"SmallCalendar\");","map":{"version":3,"names":["dayjs","React","useContext","useEffect","useState","GlobalContext","getMonth","jsxDEV","_jsxDEV","SmallCalendar","_s","currentMonthIdx","setCurrentMonthIdx","month","currentMonth","setCurrentMonth","monthIndex","setSmallCalendarMonth","setDaySelected","daySelected","handlePrevMonth","handleNextMonth","getDayClass","day","format","nowDay","currDay","slcDay","className","children","Date","year","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","i","charAt","row","Fragment","idx","_c","$RefreshReg$"],"sources":["/Users/shivamsharma/Desktop/CalendarAssignment/src/components/SmallCalendar.js"],"sourcesContent":["import dayjs from \"dayjs\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport GlobalContext from \"../context/GlobalContext\";\nimport { getMonth } from \"../util\";\n\nexport default function SmallCalendar() {\n  const [currentMonthIdx, setCurrentMonthIdx] = useState(\n    dayjs().month()\n  );\n  const [currentMonth, setCurrentMonth] = useState(getMonth());\n  useEffect(() => {\n    setCurrentMonth(getMonth(currentMonthIdx));\n  }, [currentMonthIdx]);\n\n  const {\n    monthIndex,\n    setSmallCalendarMonth,\n    setDaySelected,\n    daySelected,\n  } = useContext(GlobalContext);\n\n  useEffect(() => {\n    setCurrentMonthIdx(monthIndex);\n  }, [monthIndex]);\n\n  function handlePrevMonth() {\n    setCurrentMonthIdx(currentMonthIdx - 1);\n  }\n  function handleNextMonth() {\n    setCurrentMonthIdx(currentMonthIdx + 1);\n  }\n  function getDayClass(day) {\n    const format = \"DD-MM-YY\";\n    const nowDay = dayjs().format(format);\n    const currDay = day.format(format);\n    const slcDay = daySelected && daySelected.format(format);\n    if (nowDay === currDay) {\n      return \"bg-blue-500 rounded-full text-white\";\n    } else if (currDay === slcDay) {\n      return \"bg-blue-100 rounded-full text-blue-600 font-bold\";\n    } else {\n      return \"\";\n    }\n  }\n  return (\n    <div className=\"mt-9\">\n      <header className=\"flex justify-between\">\n        <p className=\"text-gray-500 font-bold\">\n          {dayjs(new Date(dayjs().year(), currentMonthIdx)).format(\n            \"MMMM YYYY\"\n          )}\n        </p>\n        <div>\n          <button onClick={handlePrevMonth}>\n            <span className=\"material-icons-outlined cursor-pointer text-gray-600 mx-2\">\n              chevron_left\n            </span>\n          </button>\n          <button onClick={handleNextMonth}>\n            <span className=\"material-icons-outlined cursor-pointer text-gray-600 mx-2\">\n              chevron_right\n            </span>\n          </button>\n        </div>\n      </header>\n      <div className=\"grid grid-cols-7 grid-rows-6\">\n        {currentMonth[0].map((day, i) => (\n          <span key={i} className=\"text-sm py-1 text-center\">\n            {day.format(\"dd\").charAt(0)}\n          </span>\n        ))}\n        {currentMonth.map((row, i) => (\n          <React.Fragment key={i}>\n            {row.map((day, idx) => (\n              <button\n                key={idx}\n                onClick={() => {\n                  setSmallCalendarMonth(currentMonthIdx);\n                  setDaySelected(day);\n                }}\n                className={`py-1 w-full ${getDayClass(day)}`}\n              >\n                <span className=\"text-sm\">{day.format(\"D\")}</span>\n              </button>\n            ))}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}